[{"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\index.js":"1","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\AssetBreadcrumbs.js":"2","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\home\\index.js":"3","S:\\pjsekai\\server\\pjsekai-web\\src\\App.js":"4","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\assets\\index.js":"5","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\notFound\\index.js":"6","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\notices\\index.js":"7","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\underConstruction\\index.js":"8","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\NoticeCard.js":"9","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\NoticeDialog.js":"10","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\AssetViewer.js":"11","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\events\\index.js":"12","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\EventCard.js":"13","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\events\\list.js":"14","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\events\\single.js":"15","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\BannerCarousel.js":"16","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\EventSlides.js":"17","S:\\pjsekai\\server\\pjsekai-web\\src\\reportWebVitals.js":"18","S:\\pjsekai\\server\\pjsekai-web\\src\\index.js":"19","S:\\pjsekai\\server\\pjsekai-web\\src\\constants.js":"20","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\database\\index.js":"21","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\AssetDirectory.js":"22","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\AssetTree.js":"23","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\members\\index.js":"24","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\members\\list.js":"25","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\members\\single.js":"26","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\MemberThumbnail.js":"27","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\MemberArt.js":"28","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\JsonViewDialog.js":"29","S:\\pjsekai\\server\\pjsekai-web\\src\\components\\DrawerListItem.js":"30"},{"size":8463,"mtime":1609977435043,"results":"31","hashOfConfig":"32"},{"size":1018,"mtime":1609083910821,"results":"33","hashOfConfig":"32"},{"size":1491,"mtime":1609977225907,"results":"34","hashOfConfig":"32"},{"size":354,"mtime":1609083910820,"results":"35","hashOfConfig":"32"},{"size":6704,"mtime":1609374877789,"results":"36","hashOfConfig":"32"},{"size":784,"mtime":1609208538147,"results":"37","hashOfConfig":"32"},{"size":3697,"mtime":1609381064470,"results":"38","hashOfConfig":"32"},{"size":782,"mtime":1609083910829,"results":"39","hashOfConfig":"32"},{"size":3034,"mtime":1609144180777,"results":"40","hashOfConfig":"32"},{"size":2495,"mtime":1609973641339,"results":"41","hashOfConfig":"32"},{"size":2685,"mtime":1609973357276,"results":"42","hashOfConfig":"32"},{"size":506,"mtime":1609151244930,"results":"43","hashOfConfig":"32"},{"size":4171,"mtime":1609374877738,"results":"44","hashOfConfig":"32"},{"size":2134,"mtime":1609382883539,"results":"45","hashOfConfig":"32"},{"size":1702,"mtime":1609151792287,"results":"46","hashOfConfig":"32"},{"size":2446,"mtime":1609977164334,"results":"47","hashOfConfig":"32"},{"size":6648,"mtime":1609374877866,"results":"48","hashOfConfig":"32"},{"size":375,"mtime":1609083910830,"results":"49","hashOfConfig":"32"},{"size":517,"mtime":1609978046270,"results":"50","hashOfConfig":"32"},{"size":241,"mtime":1609081953464,"results":"51","hashOfConfig":"32"},{"size":4731,"mtime":1609976562564,"results":"52","hashOfConfig":"32"},{"size":3235,"mtime":1609273351318,"results":"53","hashOfConfig":"32"},{"size":2072,"mtime":1609268275356,"results":"54","hashOfConfig":"32"},{"size":499,"mtime":1609370386473,"results":"55","hashOfConfig":"32"},{"size":3534,"mtime":1609795887926,"results":"56","hashOfConfig":"32"},{"size":7335,"mtime":1609977706176,"results":"57","hashOfConfig":"32"},{"size":1767,"mtime":1609796592336,"results":"58","hashOfConfig":"32"},{"size":1752,"mtime":1609798257835,"results":"59","hashOfConfig":"32"},{"size":1101,"mtime":1609973673112,"results":"60","hashOfConfig":"32"},{"size":695,"mtime":1609977496870,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1a9x1ub",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\index.js",["137","138","139","140","141","142","143","144","145"],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\AssetBreadcrumbs.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\home\\index.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\App.js",[],["146","147"],"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\assets\\index.js",["148"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport AssetDirectory from '../../components/AssetDirectory';\r\nimport AssetBreadcrumbs from '../../components/AssetBreadcrumbs';\r\nimport AssetTree from '../../components/AssetTree';\r\nimport AssetViewer from '../../components/AssetViewer';\r\n\r\nimport useSWR, { mutate } from 'swr';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Constants from '../../constants';\r\n\r\nfunction Assets() {\r\n  const sm = useMediaQuery(theme => theme.breakpoints.up('sm'));\r\n  const md = useMediaQuery(theme => theme.breakpoints.up('md'));\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const assetPath = location.pathname.split('/').filter((x, i) => i > 1 && x).join('/');\r\n  const { data: assetNode } = useSWR(`${Constants.API_BASE_URL}assets?path=${assetPath}`);\r\n\r\n  const [selectedPath, setSelectedPath] = useState(assetPath);\r\n  useEffect(() => {\r\n    setSelectedPath(assetPath);\r\n  }, [assetPath]);\r\n\r\n  const directoryPath = assetNode && assetNode.data[0] && assetPath && !assetNode.data[0].isDir ? assetNode.data[0].parent : assetPath;\r\n\r\n  const [directoryCache, setDirectoryCache] = useState({});\r\n\r\n  const [expandedTreeNodes, setExpandedTreeNodes] = useState([]);\r\n\r\n  const select = node => setSelectedPath(node.path);\r\n  const enter = node => {\r\n    if (node.isDir) {\r\n      setExpandedTreeNodes(prevExpandedTreeNodes => [...prevExpandedTreeNodes, node.path]);\r\n    }\r\n    history.push(`/assets/${node.path}`);\r\n  };\r\n\r\n  const cache = async path => {\r\n    const directoryData = await fetch(`${Constants.API_BASE_URL}assets?parent=${path}&$limit=1000&$sort[isDir]=-1&$sort[path]=1`).then(res => res.json());\r\n    setDirectoryCache(prevDirectoryCache => ({ ...prevDirectoryCache, [path]: directoryData }));\r\n    return directoryData;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const ancestors = directoryPath.split('/').reduce((acc, cur, i) => i > 0 ? [...acc, `${acc[acc.length - 1]}/${cur}`] : [...acc, cur], [''])\r\n    setExpandedTreeNodes(prevExpandedTreeNodes => [...prevExpandedTreeNodes, ...ancestors]);\r\n    ancestors.forEach(ancestor => {\r\n      if (!(ancestor in directoryCache)) {\r\n        cache(ancestor);\r\n      }\r\n    });\r\n  }, [directoryPath]);\r\n\r\n  let bottomComponent = <div />;\r\n  if (assetNode) {\r\n    if (!assetPath) {\r\n      bottomComponent = (\r\n        <AssetDirectory\r\n          data={directoryCache[directoryPath]}\r\n          selectedPath={selectedPath}\r\n          onSelect={sm ? select : enter}\r\n          onEnter={enter}\r\n        />\r\n      );\r\n    }\r\n    else if (assetNode.data[0]) {\r\n      bottomComponent = assetNode.data[0].isDir ?\r\n        <AssetDirectory\r\n          data={directoryCache[directoryPath]}\r\n          selectedPath={selectedPath}\r\n          onSelect={sm ? select : enter}\r\n          onEnter={enter}\r\n        /> :\r\n        <AssetViewer asset={assetNode.data[0]} />;\r\n    }\r\n    else {\r\n      bottomComponent = <div><Typography>Asset not found</Typography></div>;\r\n    }\r\n  }\r\n  else {\r\n    bottomComponent = <div><Typography>Loading...</Typography></div>;\r\n  }\r\n\r\n  let buttonComponent = assetNode && assetNode.data[0] && !assetNode.data[0].isDir ?\r\n    <Grid container direction=\"row\">\r\n      <CopyToClipboard text={`${Constants.ASSET_BASE_URL}${assetPath}`}>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Copy asset URL\r\n      </Button>\r\n      </CopyToClipboard>\r\n      <div style={{ paddingLeft: 8 }}>\r\n        <Button variant=\"contained\" color=\"primary\" href={`${Constants.ASSET_BASE_URL}${assetPath}`} target='_blank' download>\r\n          Download\r\n      </Button>\r\n      </div>\r\n    </Grid> :\r\n    <div>\r\n      <CopyToClipboard text={`https://pjsek.ai/assets/${assetPath}`}>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Copy folder URL\r\n        </Button>\r\n      </CopyToClipboard>\r\n    </div>;\r\n\r\n  return (\r\n    <div style={{ height: 'calc(100vh - 80px)' }}>\r\n      <Grid\r\n        style={{ height: '100%' }}\r\n        container\r\n        direction=\"row\"\r\n        wrap='nowrap'\r\n        spacing={1}\r\n      >\r\n        {md &&\r\n          <Grid item xs={3} xl={4}>\r\n            <Paper style={{ padding: 8, paddingTop: 12, overflow: 'auto', height: '100%' }}>\r\n              {directoryCache && <AssetTree\r\n                cache={directoryCache}\r\n                expanded={expandedTreeNodes}\r\n                selected={assetPath}\r\n                onClick={async node => {\r\n                  if (node.path === assetPath && !node.isDir) {\r\n                    history.push(`/assets/${node.parent}`);\r\n                  }\r\n                  else if (expandedTreeNodes.includes(node.path)) {\r\n                    setExpandedTreeNodes(prevExpandedTreeNodes => prevExpandedTreeNodes.filter(expandedPath => expandedPath !== node.path));\r\n                    history.push(`/assets/${node.parent}`);\r\n                  }\r\n                  else {\r\n                    enter(node);\r\n                    mutate(`${Constants.API_BASE_URL}assets?path=${node.path}`, { limit: 1, skip: 0, data: [node] });\r\n                    if (node.isDir) {\r\n                      let dirs = directoryCache[node.path];\r\n                      if (!dirs) {\r\n                        dirs = await cache(node.path);\r\n                      }\r\n                      if (dirs.data.length <= 5) {\r\n                        dirs.data.forEach(dir => {\r\n                          if (!(dir.path in directoryCache)) {\r\n                            cache(dir.path);\r\n                          }\r\n                        });\r\n                      }\r\n                    }\r\n                  }\r\n                }}\r\n              />}\r\n            </Paper>\r\n          </Grid>}\r\n        <Grid item xs>\r\n          <Paper style={{ height: '100%' }}>\r\n            <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n                style={{ padding: 8 }}\r\n              >\r\n                <AssetBreadcrumbs path={assetPath} />\r\n                <div>\r\n                  {buttonComponent}\r\n                </div>\r\n              </Grid >\r\n              {bottomComponent}\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div >\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default Assets;",["149","150"],"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\notFound\\index.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\notices\\index.js",["151","152"],"import React, { useState } from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport useSWR from \"swr\";\r\n\r\nimport NoticeCard from '../../components/NoticeCard';\r\nimport NoticeDialog from '../../components/NoticeDialog';\r\nimport Constants from '../../constants';\r\n\r\nfunction Notices() {\r\n\r\n  const itemPerLoad = 20;\r\n\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const [notice, setNotice] = useState(null);\r\n\r\n  // const [normalNotices, setNormalNotices] = useState({});\r\n  // const [normalNotices, setNormalNotices] = useState({});\r\n  const { data: normalData, mutate: normalMutate } = useSWR(`${Constants.API_BASE_URL}database/user/userInformations?informationType=normal&$limit=${itemPerLoad}&$sort${showAll ? '[startAt]=-1' : '[seq]=1'}`);\r\n  const { data: bugData, mutate: bugMutate } = useSWR(`${Constants.API_BASE_URL}database/user/userInformations?informationType=bug&$limit=${itemPerLoad}&$sort${showAll ? '[startAt]=-1' : '[seq]=1'}`);\r\n  const { data: contentData, mutate: contentMutate } = useSWR(`${Constants.API_BASE_URL}database/user/userInformations?informationType=content&$limit=${itemPerLoad}&$sort${showAll ? '[startAt]=-1' : '[seq]=1'}`);\r\n\r\n  let type, data, mutate;\r\n  switch (tabIndex) {\r\n    case 0:\r\n      type = 'normal';\r\n      data = normalData;\r\n      mutate = normalMutate;\r\n      break;\r\n    case 1:\r\n      type = 'bug';\r\n      data = bugData;\r\n      mutate = bugMutate;\r\n      break;\r\n    case 2:\r\n      type = 'content';\r\n      data = contentData;\r\n      mutate = contentMutate;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <Tabs value={tabIndex} onChange={(event, newTabIndex) => setTabIndex(newTabIndex)} centered>\r\n          <Tab label=\"Overview\" />\r\n          <Tab label=\"Bugs and issues\" />\r\n          <Tab label=\"Related sites\" />\r\n        </Tabs>\r\n\r\n        {data &&\r\n          <InfiniteScroll\r\n            key={tabIndex}\r\n            pageStart={0}\r\n            loadMore={() => mutate(async data => {\r\n              const nextData = await fetch(`${Constants.API_BASE_URL}database/user/userInformations?informationType=${type}&$limit=${itemPerLoad}&$sort${showAll ? '[startAt]=-1' : '[seq]=1'}&$skip=${data.skip + data.limit}`).then(res => res.json());\r\n              return {\r\n                ...data,\r\n                ...nextData,\r\n                data: [...data.data, ...nextData.data],\r\n              };\r\n            }, false)}\r\n            hasMore={data.skip + data.limit < data.total}\r\n            loader={\r\n              <div key={0}>\r\n                <Typography align='center'>\r\n                  Loading...\r\n                </Typography>\r\n              </div>\r\n            }\r\n          >\r\n            {data.data.map(entry => {\r\n              return (\r\n                <NoticeCard notice={entry} onNoticeClick={(entry) => {\r\n                  if (entry.browseType === 'internal') {\r\n                    setNotice(entry);\r\n                    setOpen(true);\r\n                  }\r\n                  else {\r\n                    window.open(entry.path, \"_blank\");\r\n                  }\r\n                }} key={entry.id} />\r\n              );\r\n            })}\r\n            <div style={{ height: 16 }} />\r\n          </InfiniteScroll>\r\n        }\r\n      </Paper>\r\n      {notice &&\r\n        <NoticeDialog notice={notice} onClose={() => { setOpen(false); }} open={open} />\r\n      }\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Notices;","S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\underConstruction\\index.js",[],["153","154"],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\NoticeCard.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\NoticeDialog.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\AssetViewer.js",["155","156","157"],"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\events\\index.js",["158"],"import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport EventList from './list';\r\nimport SingleEvent from './single';\r\n\r\nfunction Events() {\r\n  const { path, url } = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <EventList />\r\n        </Route>\r\n        <Route path={`${path}/:eventId`}>\r\n          <SingleEvent />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Events;",["159","160"],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\EventCard.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\events\\list.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\events\\single.js",["161"],"import React from 'react';\r\nimport useSWR from \"swr\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport EventCard from '../../components/EventCard';\r\nimport NotFound from '../notFound';\r\nimport UnderConstruction from '../underConstruction';\r\nimport Constants from '../../constants';\r\n\r\nfunction SingleEvent() {\r\n  const { eventId } = useParams();\r\n  const { path, url } = useRouteMatch();\r\n  const history = useHistory();\r\n  const { data } = useSWR(`${Constants.API_BASE_URL}database/master/events?&id=${eventId}`);\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          {data &&\r\n            (data.data[0] ?\r\n              <EventCard\r\n                event={data.data[0]}\r\n                onChartsClick={(entry) => {\r\n                  history.push(`/event-charts?score-time[]=${entry.id}`);\r\n                }}\r\n                onRankingsClick={(entry) => {\r\n                  history.push(`/events/${entry.id}/rankings`);\r\n                }}\r\n                onShopClick={(entry) => {\r\n                  history.push(`/events/${entry.id}/shop`);\r\n                }}\r\n                onVliveClick={(entry) => {\r\n                  history.push(`/virtual-lives/${entry.virtualLiveId}`);\r\n                }}\r\n                key={data.data[0].id}\r\n              /> : <NotFound />\r\n            )\r\n          }\r\n        </Route>\r\n        <Route path={`${path}/rankings`}>\r\n          <UnderConstruction />\r\n        </Route>\r\n        <Route path={`${path}/shop`}>\r\n          <UnderConstruction />\r\n        </Route>\r\n      </Switch>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleEvent;",["162","163"],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\BannerCarousel.js",["164","165"],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\EventSlides.js",["166","167","168","169"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Carousel from 'nuka-carousel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Button from '@material-ui/core/Button';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\n\r\nimport Constants from '../constants';\r\n\r\nfunction EventSlides({ event, open, onClose }) {\r\n  const [slideIndex, setSlideIndex] = useState(0);\r\n  const carousel = useRef();\r\n\r\n  return (\r\n    <Dialog\r\n      PaperProps={{\r\n        style: {\r\n          backgroundColor: 'transparent',\r\n          boxShadow: 'none',\r\n        },\r\n      }}\r\n      maxWidth={false}\r\n      fullWidth\r\n      onClose={(prop) => { onClose(prop); setSlideIndex(0); }}\r\n      open={open}\r\n    >\r\n      <DialogContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          {/* <IconButton style={{\r\n            position: 'absolute', right: 8,\r\n            top: 8\r\n          }} onClick={() => setOpen(false)}>\r\n            <CloseIcon />\r\n          </IconButton> */}\r\n          <Grid container item justify=\"flex-start\" xs={1}>\r\n            {slideIndex > 0 &&\r\n              < ButtonBase onClick={() => setSlideIndex(slideIndex - 1)}>\r\n                <LazyLoadImage\r\n                  style={{\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    objectFit: 'contain',\r\n                  }}\r\n                  src='/events/arrow_switching_left.png'\r\n                  effect='opacity'\r\n                />\r\n              </ButtonBase>\r\n            }\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            <div style={{ marginBottom: 24 }}>\r\n              <Carousel\r\n                ref={carousel}\r\n                cellSpacing={32}\r\n                wrapAround={true}\r\n                withoutControls={true}\r\n                slideIndex={slideIndex}\r\n                afterSlide={i => setSlideIndex(i)}\r\n              >\r\n                {[1, 2, 3, 4].map(i => {\r\n                  const url = `${Constants.ASSET_BASE_URL}ondemand/event/${event.assetbundleName}/slide/top/event_${`${i}`.padStart(2, '0')}.png`;\r\n                  return (\r\n                    <div key={i} style={{ borderRadius: 48, padding: 24, paddingBottom: 16, backgroundColor: '#ffffff' }}>\r\n                      <img\r\n                        onLoad={() => carousel.current.setDimensions()}\r\n                        style={{ borderRadius: 24, width: '100%', height: '100%', objectFit: 'contain' }}\r\n                        src={url}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Carousel>\r\n            </div>\r\n            <Grid\r\n              container\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={3}>\r\n                {slideIndex > 0 &&\r\n                  <Button variant='contained' style={{ width: '100%' }} onClick={() => setSlideIndex(slideIndex - 1)}>\r\n                    Previous\r\n                  </Button>\r\n                }\r\n              </Grid>\r\n              <Grid item container\r\n                justify=\"center\"\r\n                alignItems=\"center\" xs={6}>\r\n                <Paper style={{\r\n                  borderRadius: 12,\r\n                  backgroundColor: '#ffffff99',\r\n                  boxShadow: 'none',\r\n                  width: 80,\r\n                  height: 22,\r\n                }}>\r\n                  <Grid\r\n                    style={{ height: '100%' }}\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    {\r\n                      [...Array(4).keys()].map(i => {\r\n                        return (\r\n                          <Grid key={i} item>\r\n                            <ButtonBase style={{ borderRadius: '50%' }} onClick={() => {\r\n                              setSlideIndex(i);\r\n                            }}>\r\n                              <Paper style={{ margin: 0, height: 14, width: 14, borderRadius: '50%', backgroundColor: '#ffffff' }}>\r\n                                <Grid\r\n                                  style={{ height: '100%' }}\r\n                                  container\r\n                                  justify=\"center\"\r\n                                  alignItems=\"center\"\r\n                                >\r\n                                  <Grid item>\r\n                                    <Paper style={{ height: 10, width: 10, borderRadius: '50%', backgroundColor: i === slideIndex ? '#FF55AA' : '#444466' }} />\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </Paper>\r\n                            </ButtonBase>\r\n                          </Grid>\r\n                        );\r\n                      })\r\n                    }\r\n                  </Grid>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                {slideIndex < 3 ?\r\n                  <Button variant='contained' color='primary' style={{ width: '100%' }} onClick={() => setSlideIndex(slideIndex + 1)}>\r\n                    Next\r\n                  </Button> :\r\n                  <Button variant='contained' color='primary' style={{ width: '100%' }} onClick={(prop) => { onClose(prop); setSlideIndex(0); }}>\r\n                    Close\r\n              </Button>\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"flex-end\" item xs={1}>\r\n            {slideIndex < 3 &&\r\n              <ButtonBase onClick={() => setSlideIndex(slideIndex + 1)}>\r\n                <LazyLoadImage\r\n                  style={{\r\n                    height: '100%',\r\n                    width: '100%',\r\n                    objectFit: 'contain',\r\n                  }}\r\n                  src='/events/arrow_switching_right.png'\r\n                  effect='opacity'\r\n                />\r\n              </ButtonBase>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </DialogContent>\r\n    </Dialog >\r\n  );\r\n}\r\n\r\nexport default EventSlides;","S:\\pjsekai\\server\\pjsekai-web\\src\\reportWebVitals.js",[],["170","171"],"S:\\pjsekai\\server\\pjsekai-web\\src\\index.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\constants.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\database\\index.js",["172"],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\AssetDirectory.js",["173"],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\AssetTree.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\members\\index.js",["174"],"import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport CardList from './list';\r\nimport SingleCard from './single';\r\n\r\nfunction Cards() {\r\n  const { path, url } = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <CardList />\r\n        </Route>\r\n        <Route path={`${path}/:cardId`}>\r\n          <SingleCard />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;",["175","176"],"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\members\\list.js",["177","178","179","180"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport useSWR from \"swr\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\n\r\nimport MemberThumbnail from '../../components/MemberThumbnail';\r\nimport Constants from '../../constants';\r\n\r\nfunction MemberList() {\r\n  const itemPerLoad = 24;\r\n\r\n  const [showAfterTraining, setShowAfterTraining] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const [cards, setCards] = useState({\r\n    skip: 0,\r\n    limit: 0,\r\n  });\r\n  useEffect(async () => {\r\n    const response = await axios.get(`${Constants.API_BASE_URL}database/master/cards?&$limit=${itemPerLoad}&$sort[releaseAt]=-1&$sort[seq]=-1`);\r\n    setCards(response.data);\r\n  }, []);\r\n\r\n  // const { data, mutate } = useSWR(`${Constants.API_BASE_URL}database/master/cards?&$limit=${itemPerLoad}&$sort[releaseAt]=-1&$sort[id]=-1`);\r\n  return (\r\n    <div>\r\n      <InfiniteScroll\r\n        pageStart={0}\r\n        loadMore={async () => {\r\n          const response = await axios.get(`${Constants.API_BASE_URL}database/master/cards?&$limit=${itemPerLoad}&$sort[releaseAt]=-1&$sort[seq]=-1&$skip=${cards.skip + cards.limit}`);\r\n          setCards(prevCards => {\r\n            const nextCards = response.data;\r\n            return {\r\n              ...prevCards,\r\n              ...nextCards,\r\n              data: [...prevCards.data, ...nextCards.data],\r\n            };\r\n          })\r\n        }}\r\n        hasMore={cards.skip + cards.limit < cards.total}\r\n        loader={\r\n          <div key={0}>\r\n            <Typography align='center'>\r\n              Loading...\r\n              </Typography>\r\n          </div>\r\n        }\r\n      >\r\n        <Grid container spacing={1} alignItems='center'>\r\n          {cards.data && cards.data.map(entry => {\r\n            return (\r\n              <Grid key={entry.id} item xs={3} md={2} xl={1} style={{ maxWidth: 192 }}>\r\n                <div style={{ paddingTop: '100%', position: 'relative' }}>\r\n                  <Paper style={{ position: 'absolute', top: 0, left: 0, bottom: 0, right: 0, overflow: 'hidden', borderRadius: '5.13%' }}>\r\n                    <ButtonBase\r\n                      style={{ height: '100%', width: '100%' }}\r\n                      onClick={() => {\r\n                        history.push(`/members/${entry.id}`);\r\n                      }}\r\n                    >\r\n                      <MemberThumbnail style={{ height: '100%', width: '100%' }} info={entry} afterTraining={showAfterTraining} />\r\n                    </ButtonBase>\r\n                  </Paper>\r\n                </div>\r\n\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <div style={{ height: 16 }} />\r\n      </InfiniteScroll>\r\n      <Fab style={{\r\n        position: 'fixed',\r\n        bottom: 16,\r\n        right: 16,\r\n      }} onClick={() => setShowAfterTraining(prevShowAfterTraining => !prevShowAfterTraining)}>\r\n        <img style={{\r\n          height: '50%',\r\n          width: '50%',\r\n          objectFit: 'contain',\r\n        }} src='/members/icon_change_gn.png' />\r\n      </Fab>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default MemberList;",["181","182"],"S:\\pjsekai\\server\\pjsekai-web\\src\\pages\\members\\single.js",["183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\MemberThumbnail.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\MemberArt.js",[],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\JsonViewDialog.js",["201","202","203","204"],"S:\\pjsekai\\server\\pjsekai-web\\src\\components\\DrawerListItem.js",[],{"ruleId":"205","severity":1,"message":"206","line":6,"column":3,"nodeType":"207","messageId":"208","endLine":6,"endColumn":7},{"ruleId":"205","severity":1,"message":"209","line":16,"column":3,"nodeType":"207","messageId":"208","endLine":16,"endColumn":11},{"ruleId":"205","severity":1,"message":"210","line":17,"column":3,"nodeType":"207","messageId":"208","endLine":17,"endColumn":15},{"ruleId":"205","severity":1,"message":"211","line":18,"column":3,"nodeType":"207","messageId":"208","endLine":18,"endColumn":15},{"ruleId":"205","severity":1,"message":"212","line":30,"column":8,"nodeType":"207","messageId":"208","endLine":30,"endColumn":21},{"ruleId":"205","severity":1,"message":"213","line":33,"column":8,"nodeType":"207","messageId":"208","endLine":33,"endColumn":25},{"ruleId":"205","severity":1,"message":"214","line":34,"column":8,"nodeType":"207","messageId":"208","endLine":34,"endColumn":28},{"ruleId":"205","severity":1,"message":"215","line":35,"column":8,"nodeType":"207","messageId":"208","endLine":35,"endColumn":23},{"ruleId":"205","severity":1,"message":"216","line":37,"column":8,"nodeType":"207","messageId":"208","endLine":37,"endColumn":17},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":61,"column":6,"nodeType":"223","endLine":61,"endColumn":21,"suggestions":"224"},{"ruleId":"217","replacedBy":"225"},{"ruleId":"219","replacedBy":"226"},{"ruleId":"205","severity":1,"message":"227","line":17,"column":19,"nodeType":"207","messageId":"208","endLine":17,"endColumn":29},{"ruleId":"228","severity":1,"message":"229","line":29,"column":3,"nodeType":"230","messageId":"231","endLine":45,"endColumn":4},{"ruleId":"217","replacedBy":"232"},{"ruleId":"219","replacedBy":"233"},{"ruleId":"205","severity":1,"message":"234","line":5,"column":8,"nodeType":"207","messageId":"208","endLine":5,"endColumn":24},{"ruleId":"205","severity":1,"message":"235","line":23,"column":17,"nodeType":"207","messageId":"208","endLine":23,"endColumn":22},{"ruleId":"205","severity":1,"message":"236","line":27,"column":10,"nodeType":"207","messageId":"208","endLine":27,"endColumn":22},{"ruleId":"205","severity":1,"message":"237","line":11,"column":17,"nodeType":"207","messageId":"208","endLine":11,"endColumn":20},{"ruleId":"217","replacedBy":"238"},{"ruleId":"219","replacedBy":"239"},{"ruleId":"205","severity":1,"message":"237","line":17,"column":17,"nodeType":"207","messageId":"208","endLine":17,"endColumn":20},{"ruleId":"217","replacedBy":"240"},{"ruleId":"219","replacedBy":"241"},{"ruleId":"205","severity":1,"message":"242","line":11,"column":15,"nodeType":"207","messageId":"208","endLine":11,"endColumn":21},{"ruleId":"243","severity":1,"message":"244","line":29,"column":15,"nodeType":"245","endLine":29,"endColumn":96},{"ruleId":"205","severity":1,"message":"246","line":1,"column":27,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"247","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":18},{"ruleId":"205","severity":1,"message":"248","line":5,"column":8,"nodeType":"207","messageId":"208","endLine":5,"endColumn":17},{"ruleId":"243","severity":1,"message":"244","line":76,"column":23,"nodeType":"245","endLine":80,"endColumn":25},{"ruleId":"217","replacedBy":"249"},{"ruleId":"219","replacedBy":"250"},{"ruleId":"221","severity":1,"message":"251","line":51,"column":6,"nodeType":"223","endLine":51,"endColumn":20,"suggestions":"252"},{"ruleId":"205","severity":1,"message":"253","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":13},{"ruleId":"205","severity":1,"message":"237","line":11,"column":17,"nodeType":"207","messageId":"208","endLine":11,"endColumn":20},{"ruleId":"217","replacedBy":"254"},{"ruleId":"219","replacedBy":"255"},{"ruleId":"205","severity":1,"message":"256","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":14},{"ruleId":"205","severity":1,"message":"257","line":11,"column":10,"nodeType":"207","messageId":"208","endLine":11,"endColumn":23},{"ruleId":"221","severity":1,"message":"258","line":27,"column":13,"nodeType":"259","endLine":30,"endColumn":4},{"ruleId":"243","severity":1,"message":"244","line":85,"column":9,"nodeType":"245","endLine":89,"endColumn":48},{"ruleId":"217","replacedBy":"260"},{"ruleId":"219","replacedBy":"261"},{"ruleId":"205","severity":1,"message":"262","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":17},{"ruleId":"205","severity":1,"message":"263","line":9,"column":8,"nodeType":"207","messageId":"208","endLine":9,"endColumn":24},{"ruleId":"205","severity":1,"message":"264","line":10,"column":8,"nodeType":"207","messageId":"208","endLine":10,"endColumn":14},{"ruleId":"205","severity":1,"message":"265","line":20,"column":10,"nodeType":"207","messageId":"208","endLine":20,"endColumn":16},{"ruleId":"205","severity":1,"message":"266","line":25,"column":17,"nodeType":"207","messageId":"208","endLine":25,"endColumn":25},{"ruleId":"205","severity":1,"message":"267","line":26,"column":10,"nodeType":"207","messageId":"208","endLine":26,"endColumn":20},{"ruleId":"205","severity":1,"message":"268","line":26,"column":22,"nodeType":"207","messageId":"208","endLine":26,"endColumn":35},{"ruleId":"205","severity":1,"message":"269","line":27,"column":10,"nodeType":"207","messageId":"208","endLine":27,"endColumn":26},{"ruleId":"205","severity":1,"message":"270","line":27,"column":28,"nodeType":"207","messageId":"208","endLine":27,"endColumn":47},{"ruleId":"205","severity":1,"message":"271","line":28,"column":10,"nodeType":"207","messageId":"208","endLine":28,"endColumn":26},{"ruleId":"205","severity":1,"message":"272","line":28,"column":28,"nodeType":"207","messageId":"208","endLine":28,"endColumn":47},{"ruleId":"205","severity":1,"message":"273","line":29,"column":10,"nodeType":"207","messageId":"208","endLine":29,"endColumn":20},{"ruleId":"205","severity":1,"message":"274","line":29,"column":22,"nodeType":"207","messageId":"208","endLine":29,"endColumn":35},{"ruleId":"205","severity":1,"message":"275","line":32,"column":17,"nodeType":"207","messageId":"208","endLine":32,"endColumn":27},{"ruleId":"205","severity":1,"message":"276","line":38,"column":18,"nodeType":"207","messageId":"208","endLine":38,"endColumn":29},{"ruleId":"205","severity":1,"message":"277","line":39,"column":18,"nodeType":"207","messageId":"208","endLine":39,"endColumn":27},{"ruleId":"205","severity":1,"message":"278","line":40,"column":18,"nodeType":"207","messageId":"208","endLine":40,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":84,"column":17,"nodeType":"245","endLine":88,"endColumn":56},{"ruleId":"205","severity":1,"message":"253","line":7,"column":3,"nodeType":"207","messageId":"208","endLine":7,"endColumn":8},{"ruleId":"205","severity":1,"message":"248","line":9,"column":8,"nodeType":"207","messageId":"208","endLine":9,"endColumn":17},{"ruleId":"205","severity":1,"message":"279","line":11,"column":8,"nodeType":"207","messageId":"208","endLine":11,"endColumn":14},{"ruleId":"205","severity":1,"message":"280","line":14,"column":8,"nodeType":"207","messageId":"208","endLine":14,"endColumn":17},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'MusicNoteIcon' is defined but never used.","'LocalActivityIcon' is defined but never used.","'ChromeReaderModeIcon' is defined but never used.","'EmojiPeopleIcon' is defined but never used.","'GavelIcon' is defined but never used.","no-native-reassign",["281"],"no-negated-in-lhs",["282"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'directoryCache'. Either include it or remove the dependency array.","ArrayExpression",["283"],["281"],["282"],"'setShowAll' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["281"],["282"],"'CircularProgress' is defined but never used.","'error' is assigned a value but never used.","'viewingImage' is assigned a value but never used.","'url' is assigned a value but never used.",["281"],["282"],["281"],["282"],"'setNow' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'IconButton' is defined but never used.","'CloseIcon' is defined but never used.",["281"],["282"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["284"],"'Paper' is defined but never used.",["281"],["282"],"'useSWR' is defined but never used.","'LazyLoadImage' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["281"],["282"],"'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'Slider' is defined but never used.","'setLevel' is assigned a value but never used.","'skillLevel' is assigned a value but never used.","'setSkillLevel' is assigned a value but never used.","'story1Activation' is assigned a value but never used.","'setStory1Activation' is assigned a value but never used.","'story2Activation' is assigned a value but never used.","'setStory2Activation' is assigned a value but never used.","'masterRank' is assigned a value but never used.","'setMasterRank' is assigned a value but never used.","'rarityData' is assigned a value but never used.","'performance' is assigned a value but never used.","'technique' is assigned a value but never used.","'stamina' is assigned a value but never used.","'moment' is defined but never used.","'Constants' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [directoryCache, directoryPath]",{"range":"289","text":"290"},"Update the dependencies array to be: [data, isValidating]",{"range":"291","text":"292"},[2543,2558],"[directoryCache, directoryPath]",[1988,2002],"[data, isValidating]"]